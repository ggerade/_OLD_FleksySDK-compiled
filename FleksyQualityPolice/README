     ___________  ____	  			 ____
    /   ______ /|/   /|___________	/   /|___     __________  ____    ____
   /   /_____ |//   ///   _____  /|/   //   /|   /   ______/||\   \  /   /|
  /	  ______ /|/   ///   ______ ///        //   /   /_____|/  \\   \/   //
 /	 /|_____|//   ///   /|_____|//   //\\   \  _|____/   /|    \\      //
/__ //		 /__ ///_________ /|/__ //  \\ __\/________ //      \\    //
|__|/        |__|/ |_________|/ |__|/    \|__||________|/        /   //  
                                                                /   //
							                                   /   //
                                                              /__ //
                                                              |__|/

..::THE FLEKSY TESTER V7.5::..                                                
	...Runs On Java 1.6...

.:HOW TO RUN:.

	java -jar FleksyTester.jar [#] [x# -x]

-n	: Run without noise
-e	: Run without erroneous taps
-s	: Run without shifting
-g	: Allows setting the desired accuracy goal
-a	: Enables Android comparison *
-d	: Enables debug mode
-b	: Enables the testing environment's internal debug mode
-t	: Enables real-time taps to be sent to the server **
-o	: Disables printing output files
-a	: Remove accents on final check before adding to dictionary
-l	: Run with unknown words added to the dictionary

-ps	: Disables the use of platform suggestions *
-ip : Run Offline/Run without a server connection
-ll	: Run once, then again with unknown words included in dictionary
-tt	: Run once, then again with real-time tapping enabled **
-ez : Enables easy comparison, ignores ' and letter case

-loc:xx-XX	: Determine language locale to use, xx-XX being the locale folder

#	: IP address of server to use
n#	: Sets noise to # on execution
e#	: Sets error to # on execution
s#	: Sets shift to # on execution
g#	: Sets accuracy goal to # on execution
w#	: Sets the maximum number of words to process

Private APIs
-tlw	:	setSettingTransformLayerWeight
-slw	:	setSettingShapeLayerWeight
-clw	:	setSettingContextLayerWeight
-plw	:	setSettingPlatformLayerWeight

* 	requires working Android server connection
**	unstable

.:HOW IT WORKS:.

1-INPUT		: 	Takes user input

2-READ		: 	Reads test files from Assets/Test. Parses test file into one giant String

3-DEFINE	:	Parse String into seperate commands called Keys

4-CONVERT	:	Read Keys and send input to Fleksy Engine

5-PRINT		:	Save results to file in Output folder

6-REPEAT	:	Repeat 2-5 if more than one file

.:WHAT GETS PRINTED:.

-# of Words found
-Loading %
-Final average index, noise/error level, number of ignored words
-File name containing all output data

.:LIB FOLDER:.

Contains the dylib file. DO NOT CHANGE THE NAME

.:ASSETS/TEST FOLDER:.

Contains test files that will be run on execution. 
Multiple files in multiple folders can be ran if necessary.

.:NOTE:. 

Output txt files are located in the Output folder.

..::GENERAL INFORMATION & RUBRICK::..

.:THE RANDOM GEN SEED:.

Is generated via (NOISE LVL + ERROR LVL)

.:THE NOISE LEVEL:.

The Noise Level given will change all 
tap points X and Y coordinates randomly based
on said Noise.

EXAMPLE:

Let's say the NOISE Level is 10. 
The NoiseMaker will then generate a random value between
0 - 10, which will then go in a random direction. Wherever this
ray ends, is where the point will now be set.

O = Original X,Y point
N = New X,Y point
r = Random number generated by Noise Level (0 - NOISE)
a = Random angle determining the direction (0 - 2PI)


		 [N]
	  r /  |
	   /   |		
	[O]a__[|

.:THE ERROR LEVEL:.

The Error Level determines the chance of 
words with 5 letter or more, having either 
extra or missing characters.
For Reference:

:ERROR LEVEL RUBRICK:

	LVL		DENOMINATOR		CHANCE
	1			90			1/90
	2			'			1/45
	3			'			1/30
	4			'			2/45
	5			'			1/18
	6			'			1/15
	7			'			7/90
	8			'			4/45
	9			'			1/10
	10			'			1/9

THE FORMULA: (LVL/DENOMINATOR)*(TOTAL_CHARACTERS_IN_WORD - MIN_NUM_OF_CHARACTERS)

MIN_NUM_OF_CHARACTERS = 5

EXAMPLE:

Let's say the ERROR LVL is 2, so words
with 5 letters in them automatically have
a 1/45 chance of having either a missing or
extra character, while words with 6 letters
have 2/45 chance, words with 7 letters have
a 3/45 (1/15) chance, words with 8 letter have
a 4/45 chance, etc.
