Test-119
>hello
SR
MC -3
KB2
>.
ET "Hel.lo "
TBC (0,4)
EUL (0,6)
EOT

Test-118
>hello
SR
KB2
>.
EUL (6,7)
SR
ET "Hello . "
MC -1
EUL (6,7)
SD(2)
EUL (6,7)
EOT

Test-117
>hello
SR
SR
MC -1
TBC (2,0)
EUL (0,5)
EOT

Test-116
>hello
KB2
>.
ET "Hello."
EUL (0,5)
SR
EUL (5,6)
ET "Hello. "
SD(2)
ET "Hello, "
EOT

Test-115
KB2
>.
ET "."
EUL (0,1)
SR
EUL (0,1)
EOT

Test-114
>flekdy
KB2
>.
EUL (0,6)
ET "Fleksy."
SD(2)
EUL (0,6)
EOT

Test-113
>flekdy
KB2
>'
ET "Flekdy'"
EUL (0,7)
SR
ET "Flekdy' "
EOT

Test-112
>flekdy
KB2
>'
ET "Flekdy'"
EU (0,7)
KB1
>d
ET "Flekdy'd"
EU (0,8)
SR
ET "Flekdy'd "
EOT

Test-111
AC (off)
>hekko
SR(0)
SD(1)
ET "Hello "
EOT

Test-110
>hekko
KB2
>1
ET "Hekko1"
EOT

Test-109
>hekko
KB2
>!
ET "Hello!"
TBC (2,0)
EUL (0,5)
SR
EUL (5,6)
ET "Hello! "
SL
SL
KB1
>hekko
KB2
>:
SR
ET "Hello: "
SL
SL
KB1
>hekko
KB2
>(
ET "Hello("
EOT

Test-108
SH
>vadim
KB2
>@
KB1
>syntellia
KB2
>.
KB1
>com
ET "vadim@syntellia.com"
TBC (0,19)
SR
TBC (1,0)
EUL (0, 19)
EOT

Test-107
SH
>http
KB2
>:
ET "http:"
TBC (0,5)
>//
KB1
>www
KB2
>.
KB1
>google
KB2
>.
KB1
>com
SR
ET "http://www.google.com "
EUL (0,21)
EOT

Test-106
SH
>http
KB2
>:
ET "http:"
TBC (0,5)
SR
ET "http: "
EUL (0,5)
EOT

Test-105
>www
KB2
>.
ET "Www."
TBC (0,4)
SR
ET "Www. "
EUL (0,4)
EOT

Test-104
>abc
KB2
>123
TBC (0,6)
EUL (0,6)
EOT

Test-103
>test
SR
ET "Test "
EOT

Test-102
SL
>hello
SR
ET "Hello "
TBC (1,0)
>world
SR
ET "Hello world "
TBC (2,0)
MC -1
TBC (1,5)
SL
SL
SL
SL
SL
TBC (1,0)
ET "Hello "
EOT

Test-101
//Appending text middle of a word, SD and MC
>fleksy
SR
>allows
SR
SR
ET "Fleksy allows. "
EC end
//ETB [fleksy] [allows]- [.] [|]
TBC (3,0)
MC -5
>fleksy
ET "Fleksy allfleksyows. "
EC 16
//ETB [fleksy] [allfleksy|ows]- [.]
TBC (1,9)
SD(1)
//ET "Fleksy subsidiaries. "
MC end
SL
TBC (2,0)
//ET "Fleksy subsidiaries "
EC end
//ETB [fleksy] [subsidiaries] [|]
TBC (2,0)
MC -12
TBC (1,1)
SD(2)
//ET "Fleksy confirmatory "
//ETB [former] [confirmatory] [|]
TBC (2,0)
EOT

Test-100
//Entering word, autocorrecting and adding space
>text
SR
ET "Text "
EC 5
//ETB [text] [|]
EOT

Test-99
//Entering punctuation, adding a space
SR
ET ". "
EC 2
//ETB [.] [|]
TBC (1,0)
EOT

Test-98
//Deleting the word and space to the left of the cursor
>text
SR
SL
ET ""
EC 0
//ETB [|]
TBC (0,0)
EOT

Test-97
//Deleting characters and words depending on context
>fleksy
SR
>allows
SR
>users
SR
TBC (3,0)
//ET "Fleksy allows users "
//ETB [fleksy] [allows] [users] [|]
SL
//ET "Fleksy allows "
TBC (2,0)
EC 14
//ETB [fleksy] [allows] [|]
MC -1
//ETB [fleksy] [allows|]
SL
//ET "Fleksy allow "
SL
SL
//ET "Fleksy all "
//ETB [fleksy] [all|]
TBC (1,3)
EOT

Test-96
//Entering multiple words. Last word not altered, no space added
>hello
SR
>world
ET "Hello world"
EC 11
//ETB [hello] [world|]
TBC (1,5)
EOT

Test-95
//Changing suggestion of previous word. Cursor remains in same position
>hello
SR
SD(1)
//ET "Kelly "
EC 6
//ETB [kelly] [|]
TBC (1,0)
EOT

Test-94
//Attempting to change suggestion when cursor in TBC (0,n<nMax). nMax indicates maximum value of n in specific textblock.
>hello
SD(0)
ET "Hello"
EC 5
//ETB [kelly|]
TBC (0,5)
SD
SD(0)
//ET "Hello"
EC 5
//ETB [kelly|]
TBC (0,5)
SU
ET "Hello"
EC 5
//ETB [kelly|]
TBC (0,5)
EOT


Test-93
//Structure of two sentences
>hello
SR(0)
>world
SR(0)
SR(1)
//ET "Hello world. "
EC 13
//ETB [hello] [world]- [.] [|]
TBC (3,0)
>this
SR
>is
SR
TBC (5,0)
>Fleksy
SR(1)
SR
//ET "Hello world. This is Fleksy. "
EC 29
//ETB [hello] [world]- [.] [this] [is] [Fleksy]- [.] [|]
TBC (7,0)
EOT

Test-92
//Changing suggestion on words
>hello
SR(0)
ET "Hello "
EC 6
//ETB [hello] [|]
SD(1)
//ET "Kelly "
EC 6
//ETB [kelly] [|]
>fleksy
SR(1)
//ET "Kelly Fleksy "
//ETB [kelly] [Fleksy] [|]
MC -7
//ETB [kelly] [|] [Fleksy]
SU(0)
//ET "Hello Fleksy "
EC 6
//ETB [hello] [|] [Fleksy]
MC -3
//ETB [hel|lo] [Fleksy]
SD
//ET "Kelly Fleksy "
EC 6
//ETB [kel|ly] [Fleksy]
SU
//ET "Hello Fleksy "
MC +4
//ETB [hello] [Flek|sy]
TBC (1,4)
SD(2)
SD(3)
//ET "Hello works "
EC 13
//ETB [hello] [works] [|]
MC end
SD(4)
//ET "Hello wield "
EC end
SU(3)
//ET "Hello works "
EC 13
//ETB [hello] [works] [|]
EOT

Test-91
//Changing suggestion on punctuation. First option available is the .(period) Order: _ . , ? ! 's : ;
>hello
SR
SR(1)
ET "Hello. "
EC 7
//ETB [hello]- [.] [|]
TBC (2,0)
SD(2)
ET "Hello, "
//ETB [hello]- [,] [|]
SD(3)
ET "Hello? "
SU(2)
SU(1)
ET "Hello. "
SU(0)
ET "Hello  "
//ETB [hello] [] [|]
EOT

Test-90
//Adding a space manually. A space can be added by the user from the quick symbol list by swiping up after reaching the period. Gesture: SR SR SU
>hello
SR
SR
ET "Hello. "
>world
SR
//ET "Hello. World "
//ETB [hello]- [.] [world] [|]
MC -6
SU(0)
//ET "Hello  World "
//ETB [hello] [] [|] [world]
TBC (2,0)
EC 7
EOT

Test-89
//Swipe Right when cursor inside a textblock(x,n) in other than last position[n<nMax]: Autocorrects, enables textblock space, moves cursor to TBC(x+1,0).
>hello
SR
>world
SR
MC -3
SL
//ET "Hello wold "
TBC (1,2)
EC 8
//ETB [hello] [wo|ld]
SR(0)
//ET "Hello wild "
EC 11
EC end
//ETB [hello] [wild] [|]
EOT

Test-88
//The Back and Forth gesture or the Backspace key. Deleting previous to the cursor character. A space can also be deleted.
>hello
SR
>world
//ET "Hello world"
EC 11
//ETB [hello] [world|]
BF
ET "Hello worl"
EC 10
TBC (1,4)
//ETB [hello] [worl|]
BF
BF
BF
BF
ET "Hello "
//ETB [hello] [|]
EC 6
TBC (1,0)
BF
ET "Hello"
//ETB [hello|]
TBC (0,5)
BF
BF
ET "Hel"
>p
SR(0)
ET "Help "
//ETB [hell] [|]
EOT

Test-87
//Handling behavior around punctuation #1
>fleksy
SR
>allows
SR
>users
SR
SR
ET "Fleksy allows users. "
>to
SR
>type
SR
>text
SR
SR(1)
//ET "Fleksy allows users. To type text. "
//ETB [fleksy] [allows] [users]- [.] [to] [type] [text]- [.] [|]
MC -2
//ETB [fleksy] [allows] [users]- [.] [to] [type] [text|]- [.]
>s
TBC (6,5)
//ET "Fleksy allows users. To type texts. "
//ETB [fleksy] [allows] [users]- [.] [to] [type] [texts|]- [.]
SR
TBC (7,0)
//ET "Fleksy allows users. To type texts . "
//ETB [fleksy] [allows] [users]- [.] [to] [type] [texts] [|] [.]
SL
TBC (6,0)
//ET "Fleksy allows users. To type . "
//ETB [fleksy] [allows] [users]- [.] [to] [type] [|] [.]
SL
TBC (5,0)
SL
TBC (4,0)
//ET "Fleksy allows users. . "
//ETB [fleksy] [allows] [users]- [.] [|] [.]
SR(1)
//ET "Fleksy allows users.. . "
//ETB [fleksy] [allows] [users]- [.]- [.] [|] [.]
SL
TBC (4,0)
//ET "Fleksy allows users. . "
//ETB [fleksy] [allows] [users]- [.] [|] [.]
BF
//ET "Fleksy allows users.. "
//ETB [fleksy] [allows]- [.]- [|] [.]
EOT

Test-86
//Handling behavior around punctuation #2. Typing without a space after a period. Typing between 2 periods. Introducing: [|]+ When cursor is between a period and a space.
ST "Users.. "
ET "Users.. "
EC end
MC -2
//ETB [users]- [.]- [|] [.]
>hello
ET "Users.hello. "
//ETB [users]- [.]- [hello|]- [.]
SD
ET "Users,hello. "
//ETB [users]- [,]- [hello|]- [.]
MC +1
ET "Users,hello. "
//ETB [users]- [,]- [hello]- [.]- [|]+
>computer
//ETB [users]- [,]- [hello]- [.]- [computer|]+
SR
ET "Users,hello.computer "
//ETB [users]- [,]- [hello]- [.]- [computer] [|]
SL
ET "Users,hello. "
//ETB [users]- [,]- [hello]- [.] [|]
>computer
SR(0)
//ET "Users,hello. Computer "
//ETB [users]- [,]- [hello]- [.] [Computer] [|]
EC end
EOT

Test-85
//Handling behavior around punctuation #3. Typing without a space between a period and a word textblock.
ST "Hello. Fleksy "
//ETB [hello]- [.] [Fleksy] [|]
MC 6
//ETB [hello]- [.]- [|]+ [Fleksy]
TBC (2,0)
>computer
SR
ET "Hello.computer Fleksy "
//ETB [hello]- [.]- [test] [|] [Fleksy]
SL
ET "Hello. Fleksy "
//ETB [hello]- [.] [|] [Fleksy]
EC 7
EOT

Test-84
//Handling behavior around punctation #4
ST "Hello.Fleksy "
//ETB [hello]- [.]- [Fleksy] [|]
MC 6
//ETB [hello]- [.]- [|] [Fleksy]
>computer
ET "Hello.computerFleksy "
EC 14
TBC (2,8)
SR(0)
ET "Hello.computer Fleksy "
EC 15
TBC (3,0)
EOT

Test-83
//Handling behavior around punctuation #5. Changing suggestions in tight spaces
ST "Hello. Fleksy "
//ETB [hello]- [.] [Fleksy] [|]
MC 6
//ETB [hello]- [.]- [|]+ [Fleksy]
SD(1)
EUL (0,5)
SU(0)
ET "Hello. Fleksy "
//ETB [hello]- [.]- [|]+ [Fleksy]
>test
//ETB [hello]- [.]- [test|]+ [Fleksy]
SD(2)
//ETB [hello]- [,]- [test|] [Fleksy]
ET "Hello,test Fleksy "
EUL (6,10)
TBC (2,4)
MC +1
SD(1)
SU(0)
ET "Hello,test Fleksy "
//ETB [hello]- [,]- [test] [|] [Fleksy]
TBC (3,0)
MC -5
SU
ET "Hello,test Fleksy "
//ETB [hello]- [,]- [|] [test] [Fleksy]
EC 6
EOT

Test-82
//Capitalization case #1
>hello
SR
SR
ET "Hello. "
//ETB [hello] [.] [|]
TBC (2,0)
>g
//ETB [hello] [.] [g|]
TBC (2,1)
SL
//ETB [hello] [.] [|]
TBC (2,0)
SD
ET "Hello, "
//ETB [hello] [,] [|]
TBC (2,0)
>Fleksy
SR
ET "Hello, Fleksy "
//ETB [hello] [,] [hello] [|]
EC end
TBC (3,0)
EOT

Test-81
//Merging Textblocks
ST "Hello.test "
//ETB [hello]- [.]- [test] [|]
MC 6
//ETB [hello]- [.]- [|] [test]
>world
ET "Hello.worldtest "
//ETB [hello]- [.]- [world|] [test]
EC 11
TBC (2,5)
MC end
ET "Hello.worldtest "
//ETB [hello]- [.]- [worldtest] [|]
EC 16
TBC (3,0)
MC 6
//ETB [hello]- [.]- [|] [worldtest]
SL
//ETB [hello] [|] [worldtest]
EC 5
ET "Helloworldtest "
TBC (0,5)
MC end
TBC (1,0)
EUL (0,14)
EOT

Test-80
//Adding characters in existing textblocks. Autocorrecting and general behavior
>hello
SR
>fleksy
SR
ET "Hello Fleksy "
EC 13
//ETB [hello] [Fleksy] [|]
TBC (2,0)
SD(2)
EC 13
TBC (2,0)
SU
ET "Hello Fleksy "
EC 13
TBC (2,0)
MC -4
>g
SR(0)
EC 14
TBC (2,0)
EOT 

Test-79
//Handling word structures like "don't"
>i
SR
>dont
SR
ET "I don't "
EC 8
//ETB [i] [don't] [|]
TBC (2,0)
SD
TBC (2,0)
SU
ET "I don't "
EC 8
//ETB [i] [don't] [|]
TBC (2,0)
MC -4
>g
SR
//ET "I didn't "
//ETB [i] [didn't] [|]
EC 9
TBC (2,0)
SL
>dont
SR
ET "I don't "
MC 4
>ggg
SR(0)
EC 11
TBC (2,0)
EOT 

Test-78
//Testing New Line 1
>helko
NL
SL
ET "Hello "
TBC (1,0)
EC 6
EOT

Test-77
//Testing New Line 2
>hello
SR
SR
>this
SR
MC -3
NL
MC end
SL
ET "Hello. This "
TBC (3,0)
EC 12
EOT

Test-76
//Testing New Line 3
>hello
NL
>Fleksy
NL
SR
MC -9
SL
MC end
MC -1
SL
//ET "Hello Fleksy "
TBC (2,0)
EC 13
EOT

Test-75
//Testing Editing candidates with varying character length
>beautifully
SR
ET "Beautifully "
MC -2
SL
SL
SL
SL
SL
ET "Beauty "
EC 5
SR
ET "Beauty "
EC 7
EC end
EOT

Test-74
//Expected behavior when SU on existing text
ST "This is Fleksy "
MC 6
SD(1)
SU(0)
ET "This is Fleksy "
EC 8
TBC (2,0)
EOT
//Buggy behavior:
//ST "This is Fleksy "
//MC 6
//SU
//ET "This of Fleksy "
//EC 6
//TBC (1,1)
//SD
//ET "This if Fleksy "
//EOT

Test-73
AC (off)
>hekko
SR(0)
SD
ET "Hello "
EOT

//Test-72
////Editing dictionary words with apostrophe
//>guns
//SR(0)
//ET "Guns "
//SD(1)
//ET "Gun's "
//BF
//BF
//BF
//ET "Gun"
//SR(0)
//ET "Gun "
//SL
//>lets
//SR(1)
//ET "Let's "
//BF
//BF
//ET "Let'"
//SR(1)
//ET "Let "
//SU(0)
//ET "Let' "
//EC end
//EOT

Test-71
//Adding words with apostrophes to the dictionary.
>borrrat
SR
SU
ET "Borrrat "
SR
SD
SD
SD
SD
ET "Borrrat's "
MC 3
SR
SU
>borrrats
SR
ET "Borrrat's borrrat's "
EC end
EOT

Test-70
//Adding words>longest word to dictionary is impossible. Changing suggestions to word that doesn't exist in dictionary, expect test to crash
>meetmeinthebarinfifteenmin
SR
ET "Meetmeinthebarinfifteenmin "
SU
>meetmeinthevarinfifteenmib
SR
ET "Meetmeinthebarinfifteenmin meetmeinthevarinfifteenmib "
MC 5
SR
SD
SD
SU
SD
ET "Meetmeinthebarinfifteenmin meetmeinthevarinfifteenmib "
MC end
EC end
EOT

Test-69
//TC shouldn't add restricted words to dictionary when AC (off)
AC (off)
>california
SR
ET "California "
SU
AC (on)
>California
SR(1)
ET "California California "
SD(2)
EC end
EOT

Test-68
//Expected Underlined Text test. Format: EUL (0,5) checks if characters 0 to 5 are underlined.
>hello
SR
SD
SU
EUL (0,5)
>fleksy
SR
ET "Hello Fleksy "
EUL (6,12)
MC 2
EUL (0,5)
MC 6
EUL (0,5)
BF
EUL (0,5)
SL
SL
SL
SL
SL
EUL (0,0)
ET "Fleksy "
MC end
EUL (0,6)
EOT

Test-67
//Checking candidates order. Format: xx(y), where xxE[SR, SL, SU, SD, BF, MC, NL] yE[0-8]. Example 1:
>Hello
SR(0)
ET "Hello "
SD(1)
SU(0)
ET "Hello "
EC end
EOT

Test-66
//Checking candidates order. Example 2:
>Heklo
SR(1)
ET "Hello "
SU(0)
ET "Heklo "
EOT

//Test-65
////Checking deleting default dictionary words. Default dictionary words should not be removed from the dictionary.
//ST "This is a test"
//SR(0)
//ET "This is a test "
//SU
//SL
//>test
//SR(0)
//ET "This is a test "
//MC 6
//EUL (5,7)
//SU
//EC 8
//SL
//>is
//SR(0)
//ET "This is a test "
//EC 8
//EOT

Test-64
//Checking underline on parsed text. Checking Candidates order.
ST "Hello! This is Fleksy, a revolutionary keyboard technology.."
SR
ET "Hello! This is Fleksy, a revolutionary keyboard technology.. "
MC 7
SD(5)
SU(4)
EUL (5,6)
MC(0) 18
EUL (15,21)
MC(0) +4
SD(1)
SU(0)
EUL (15,21)
MC end
EUL (59,60)
EOT

Test-63
//Checking deleting default dictionary words when AC off.
AC (off)
ST "This is a test"
SR(0)
ET "This is a test "
SU
AC (on)
SL
>test
SR(0)
ET "This is a test "
EOT

Test-62
//Merging 's to previous textblock when Cursor moves inside that word textblock. Expected behavior:
>fleksy
SR(0)
SR(1)
SD(2)
SD(3)
SD(4)
SD(5)
ET "Fleksy's "
EUL (6,8)
MC(0) 3
EUL (0,8)
SR(0)
SU(0)
ET "Fleksy's "
EUL(0,8)
EOT

Test-61
//Checking underline in extreme cases.
ST "Hello California! Meet fleksy"
SR(1)
ET "Hello California! Meet Fleksy "
MC(0) 6
EUL (0,5)
SR(1)
EUL (5,6)
BF(1)
EUL (5,6)
ET "Hello.California! Meet Fleksy "
EC 6
SU(0)
MC(0) +1
TBC (2,1)
EUL (6,16)
ET "Hello.California! Meet Fleksy "
SR(0)
ET "Hello.California ! Meet Fleksy "
SL(1)
BF
>california
SD(2)
ET "Hello,california! Meet Fleksy "
SD(3)
SD(4)
SD(5)
SD(6)
ET "Hello:california! Meet Fleksy "
MC 2
EUL (0,5)
MC 8
EUL (6,16)
EOT

Test-60
//Introducing Caps Lock. Format: CAPS (on) Expects all characters in caps CAPS (off)
CAPS (on)
>hello
ET "HELLO"
CAPS (off)
SR
ET "HELLO "
EOT

Test-59
//Caps and Alt Keyboards.
CAPS (on)
>hi
ET "HI"
KB2
>!
SR
ET "HI! "
KB1
>friend
SR
ET "HI! FRIEND "
CAPS (off)
EOT

Test-58
//Caps and idle screens.
CAPS (on)
ST "California blue. "
>hello
SR
ET "California blue. HELLO "
CAPS (off)
EOT

Test-57
//Apostrophe can now live inside textblocks. Example:
>aren
KB2
>'
KB1
>t
SR
ET "Aren't "
SL(0)
ET ""
EOT

Test-56
//Apostrophe in textblocks #2
>don
EUL (0,3)
KB2
>'
SU
EUL (0,4)
//ET "Don'"
KB1
>t
EUL (0,5)
//ET "Don't"
SR
ET "Don't "
EUL (0,5)
EOT

Test-55
//Apostrophe in textblocks #3
ST "Won't isn't want "
MC 7
ET "Won't isn't want "
MC(0) 3
SL
SL
BF
SH
>won
SR
ET "Won't isn't want "
EOT

Test-54
//Apostrophe in textblocks #4
>don
EUL (0,3)
KB2
>''''''
EUL (0,9)
ET "Don''''''"
KB1
>t
EUL (0,10)
ET "Don''''''t"
SR(0)
ET "Don''''''t "
EUL (0,10)
SU(0)
ET "Don''''''t "
EUL (0,10)
EOT

//Test-53
////Apostrophe in textblocks #5. Adding to dictionary
//>don
//EUL (0,3)
//KB2
//>'
//EUL (0,4)
//ET "Don'"
//KB1
//>cha
//EUL (0,7)
//ET "Don'cha"
//SR
//SU(0)
//ET "Don'cha "
//EUL (0,7)
//SU
//SL
//>doncha
//SR
//ET "Don'cha "
//EOT

Test-1
ST "Let's parse existing text "
ET "Let's parse existing text "
>and
SR
ET "Let's parse existing text and "
>add
SR
>more
SR
>text
SR
ET "Let's parse existing text and add more text "
EOT

Test0
SR
SL
EC0
EOT

Test1
>h
EC 1
ET "H"
SR
ET "I "
EC 2
EOT

Test2
>hello
SR
ET "Hello "
EC 6
EOT

Test3
>hello
SR
SL
ET ""
EC 0
EOT

Test4
>hello
SL
ET "Hell"
EC 4
EOT

Test5
>hello
SR
>fleksy
SR
ET "Hello Fleksy "
EC 13
EOT

Test6
SR
ET ". "
EC 2
EOT

Test7
EC 0
>hello
SR
>fleksy
SR
SR
EC 14
SD
SD
SD
ET "Hello Fleksy! "
EC 14
EOT

Test8
EC 0
>hello
SL
>ish
SR
ET "Hellish "
EC 8
EOT

Test9
>hello
SR
>fleksy
SR
MC 6
SD(1)
MC 1
SR
TBC (1,0)
EC 6
SL
TBC (0,0)
ET "Fleksy "
EC 0
EOT

Test10
EC 0
>computer
SR
MC 4
>bit
SR(0)
SR(1)
TBC (2,0)
SD(2)
TBC (2,0)
SL
TBC (1,0)
SD
EC 12
EOT

//Test11
//>lets
//SR
//ET "Let's "
//EC 6
//TBC (1,0)
//SL
//TBC (0,0)
//ET ""
//EC 0
//EOT

Test12
>hello
SR
>Fleksy
SR
SR
>Fleksy
SR
>allows
SR
>users
SR
>to
SR
ET "Hello Fleksy. Fleksy allows users to "
TBC (7,0)
SL
ET "Hello Fleksy. Fleksy allows users "
MC 28
TBC (5,0)
SR
SR
SD
SD
SD
ET "Hello Fleksy. Fleksy allows.! users "
EC 30
EOT

Test13
>our
SR
>revolutionary
SR
>keyboard
SR
>technology
SR
>does
SR
>not
SR
>need
SR
>accuracy
SR
SR
SD
ET "Our revolutionary keyboard technology does not need accuracy, "
>just
SR
>tap
SR
>on
SR
>the
SR
>screen
SR
>and
SR
>Fleksy
SR
SR
ET "Our revolutionary keyboard technology does not need accuracy, just tap on the screen and Fleksy. "
MC 62
SU
ET "Our revolutionary keyboard technology does not need accuracy. just tap on the screen and Fleksy. "
MC 67
SL
ET "Our revolutionary keyboard technology does not need accuracy. tap on the screen and Fleksy. "
EC 62
>just
SR
ET "Our revolutionary keyboard technology does not need accuracy. Just tap on the screen and Fleksy. "
>do
SR
ET "Our revolutionary keyboard technology does not need accuracy. Just do tap on the screen and Fleksy. "
TBC (11,0)
MC 73
TBC (11,3)
>s
ET "Our revolutionary keyboard technology does not need accuracy. Just do taps on the screen and Fleksy. "
MC 55
ET "Our revolutionary keyboard technology does not need accuracy. Just do taps on the screen and Fleksy. "
EC 55
EOT

Test14
>hello
MC -5
EC 0
EOT

Test15
>hello
MC -1
TBC (0,4)
EC 4
SL
MC +1
SR(1)
EC 5
ET "Help "
EOT

Test16
>Fleksy
SR(0)
SD(1)
SD(2)
SD(3)
SR(1)
TBC (2,0)
SR(1)
TBC (3,0)
SD(2)
//ET "Worker., "
MC 6
SD(4)
//ET "Clench., "
SD(5)
//ET "Formal., "
SU
SU
SU(2)
//ET "Format., "
MC 9
SL
//ET "Format. "
SL
//ET "Format "
SU
SU(0)
ET "Fleksy "
EC 7
EOT

Test17
>Hello
SR
EC 6
ET "Hello "
SL
EC 0
>hello
SR
EC 6
ET "Hello "
EOT

Test18
>this
SR
>is
SR
>a
SR
>test
SR
SR
EC 16
ET "This is a test. "
>today
SR
>is
SR
>raining
SR
SR
EC 34
ET "This is a test. Today is raining. "
MC 16
EC 16
SL
SL
SL
SL
SL
EC 0
ET "Today is raining. "
MC 18
>danger
SR
EC 25
ET "Today is raining. Danger "
SR
SD
ET "Today is raining. Danger, "
>waterfall
SR
>ahead
SR
SR
EC 43
ET "Today is raining. Danger, waterfall ahead. "
>watch
SR
>out
SR
>for
SR
>falling
SR
>water
SR
SR
SD
SD
SD
EC 72
ET "Today is raining. Danger, waterfall ahead. Watch out for falling water! "
EOT

Test19
>test
SR
ET "Test "
EC 5
MC 0
TBC (0,0)
>test
SR
EC 5
ET "Test Test "
TBC (1,0)
MC 0
TBC (0,0)
>test
SR
EC 5
ET "Test Test Test "
TBC (1,0)
>Fleksy
SR
>computer
SR
SR
ET "Test Fleksy computer. Test Test "
EOT

Test20
>test
SR
SR
EC 6
ET "Test. "
>Fleksy
SR
SR
EC 14
ET "Test. Fleksy. "
MC 6
>fleksy
SR
>computer
SR
SR
EC 23
ET "Test. Fleksy computer. Fleksy. "
EOT

Test21
>test
SR
SR
SD
SD
EC 6
ET "Test? "
>party
SR
SR
SD
SD
SD
EC 13
ET "Test? Party! "
MC 6
>android
SR
EC 14
ET "Test? Android Party! "
EOT


Test22
>fleksy
SR
SR
>fleksy
SR(0)
EC 15
SD(1)
EC 15
SD(2)
EC 15
SU(1)
SU(0)
EC 15
SU(0)
SU
SU(0)
ET "Fleksy. Fleksy "
EC 15
EOT

Test23
>test
SR
EC end
ET "Test "
MC 0
MC end
EC end
EOT

Test24
>fleksy
SR
>likes
SR
>paypal
SR
//ET "Fleksy likes parish "
EC 20
SL
>potato
SR
//ET "Fleksy likes potato "
EC end
EOT

Test25
SR
SR
>Hello
SR
EC 9
ET ".. Hello "
EOT

Test26
SR
SR
SR
EC 4
ET "... "
>test
SR
EC 9
//ET "... Test "
EOT

Test27
SR
SR
ET ".. "
MC 1
TBC (1,0)
>test
SR
//ET ".test . "
EOT

Test28
>test
SR
MC 1
SD
ET "Rest "
EOT

Test29
>test
SR
MC 1
SD
ET "Rest "
MC 5
>this
SR
ET "Rest this "
EOT

Test30
>hello
SR
SD
TBC (1,0)
>b
SD
TBC (1,1)
//ET "Belly b"
SR
//ET "Belly I "
TBC (2,0)
EOT

Test31
>hello
SR
ET "Hello "
MC 2
>yo
SR
ET "Heyollo "
EOT

Test32
>hello
SR
MC 2
>band
SR
//ET "Generally "
EOT

Test33
>hello
SR
ET "Hello "
MC 2
TBC (0,2)
>b
ET "Hebllo "
SD
ET "Family "
TBC (1,0)
EOT

Test34
>Im
SR
ET "I'm "
>great
SR
ET "I'm great "
EOT

Test35
>Im
SR
ET "I'm "
>great
SR
ET "I'm great "
MC 4
SD
//ET "In great "
SD
//ET "On great "
EOT

Test36
>this
SR
>is
SR
>a
SR
>test
SR
>for
SR
>merge
SR
//ET "This is a test for merge "
EC 25
MC 8
>banann
MC end
EC 31
TBC (6,0)
//ET "This is bananna test for merge "
EOT

Test37
>text
SR
SR
ET "Text. "
MC 4
SR
ET "Text . "
EOT

Test38
TBC (0,0)
>this
SR
>is
SR
>a
SR
>test
SR
>for
SR
>text
SR
>block
SR
>cursor
SR
SR
TBC (9,0)
ET "This is a test for text block cursor. "
SL
TBC (8,0)
MC 1
TBC (0,1)
MC end
TBC (8,0)
MC 5
TBC (1,0)
EOT

Test39
>text
SR
>text
SR
MC 5
TBC (1,0)
BF
TBC (0,4)
ET "Texttext "
BF
ET "Textext "
EOT

Test40
>text
SR
>text
SR
MC 5
BF
ET "Texttext "
MC 9
TBC (1,0)
EOT

Test41
>text
SR
SR
>text
SR
EC 11
//ET "Text. Text "
MC 6
TBC (2,0)
BF
//ET "Text.Text "
TBC (2,0)
MC 10
TBC (3,0)
EOT

Test42
>text
SR
SR
EC 6
>text
SR
EC 11
//ET "Text. Text "
MC 5
TBC (2,0)
EC 5
EOT

Test43
>text
SR
EC 5
SR
SR
ET "Text.. "
TBC (3,0)
EC 7
MC -2
TBC (2,0)
SR
TBC (2,0)
ET "Text. . "
EOT

Test44
>text
SR
SR
>text
SR
//ET "Text. Text "
MC 5
TBC (2,0)
>text
SR
EC 10
//ET "Text.text Text "
TBC (3,0)
EOT

Test45
ST "Existing text "
MC 5
TBC (0,5)
SR
TBC (1,0)
ET "Existing text "
EOT

Test46
ST "Existing text "
MC 5
TBC (0,5)
SD
TBC (1,0)
//ET "Relating text "
EOT

Test47
KB2
>12345
ET "12345"
TBC (0,5)
EOT

Test48
>hello
KB2
>1
ET "Hello1"
TBC (0,6)
EOT

Test49
>hello
KB2
>1
ET "Hello1"
TBC (0,6)
KB1
>hello
SR
TBC (1,0)
ET "Hello1hello "
EOT

Test50
>hello
MC -2
KB2
>6
TBC (0,4)
ET "Hel6lo"
MC end
TBC (0,6)
EOT

Test51
>h
SH
>ello
SR
TBC (1,0)
ET "HEllo "
EOT

Test52
SH
>hello
SR
TBC (1,0)
ET "hello "
EOT

Test53
>h
SH
>e
SH
>l
SH
>l
SH
>o
SR
TBC (1,0)
ET "HELLO "
EOT

Test54
SH (on)
>hello
SR
SR
ET "Hello. "
SH (on)
SD
SH (off)
ET "Hello, "
EOT

Test55
>hello
SH (off)
NL
TBC (2,0)
SH (on)
EOT

Test56
>hello
SR
SR
BF
//"Hello."
>banana
SR
//"Hello.banana "
ET "Hello.banana "
MC 6
SL
ET "Hellobanana "
MC end
TBC (1,0)
EOT

Test57
>hello
SR
SR
MC -1
SL
ET "Hello "
EC 5
TBC (0,5)
EOT

Test58
>hey
SR
ET "Hey "
SR
SR
SU
ET "Hey.  "
TBC (3,0)
BF
TBC (3,0)
EOT

//Test59
//>its
//SR
//ET "It's "
//EC 5
//BF
//SU
//ET "Its"
//EC 3
//SD
//ET "It's"
//EC 4
//EOT

Test60
>hello
SR
SR
SD
SD
SD
SD
ET "Hello's "
MC 2
TBC (0,2)
MC 8
>banana
SR
ET "Hello's banana "
TBC (2,0)
EOT

Test61
>hello
SR
SR
SD
SD
SD
SD
MC -1
ET "Hello's "
TBC (0,7)
EOT

Test62
ST "hello "
MC 2
SL
SL
>he
ET "hello "
EOT

Test63
>hello
KB2
>1
ET "Hello1"
TBC (0,6)
EOT

Test64
>hello
SR
>word
SR
MC -3
SL
SL
ET "Hello rd "
TBC (1,0)
SL
ET "rd "
TBC (0,0)
>hello
SR
ET "Hello rd "
TBC (1,0)
EOT 

Test65
>hello
SR
>world
SR
MC -4
SL
SL
SD
SU
ET "Hello rld "
>blah
TBC (1,4)
MC 11
TBC (1,5)
EUL (6,13)
ET "Hello blahrld "
EOT

Test66
AC (off)
>hwllo
SR
ET "Hwllo "
AC (on)
>hwllo
SR
ET "Hwllo hello "
MC 1
SD
ET "Hello hello "
EOT

Test67
AC (off)
>hello
SR
ET "Hello "
MC 2
SR
ET "He llo "
TBC (1,0)
EC 3
EOT

Test68
AC (off)
>hello
SL
SL
SL
SL
TBC (0,1)
>ouse
SR
ET "House "
EC 6
EOT

Test69
AC (off)
>hello
SR
ET "Hello "
TBC (1,0)
MC 2
TBC (0,2)
SD(1)
EC 6
TBC (1,0)
AC (on)
SD(2)
TBC (1,0)
EC 6
EOT

Test70
>hello
SR
ET "Hello "
TBC (1,0)
MC 2
KB2
>0
ET "He0llo "
TBC (0,3)
SR
ET "He0llo "
TBC (1,0)
EC 7
EOT

Test71
>hello
SR
SR
SD
SD
SD
SD
ET "Hello's "
TBC (2,0)
EC 8
MC 2
TBC (0,2)
MC end
TBC (1,0)
EOT

//Move cursor to <'|s>
Test72
>hello
SR
SR
SD
SD
SD
SD
ET "Hello's "
TBC (2,0)
EC 8
MC -2
TBC (0,6)
MC end
TBC (1,0)
EOT

//Move cursor to <'s|>
Test73
>hello
SR
SR
SD
SD
SD
SD
ET "Hello's "
TBC (2,0)
EC 8
MC -1
TBC (0,7)
MC end
TBC (1,0)
EOT

Test74
>hello
SR
ET "Hello "
EUL (0,5)
EOT

Test75
SR
ET ". "
EUL (0,1)
EOT

Test76
>hello
EUL (0,5)
SR
EUL (0,5)
SL
EUL (0,0)
EOT

Test77
SL
EUL (0,0)
EOT

Test78
>hello
SR
ET "Hello "
KB2
>1
KB1
ET "Hello 1"
EUL (6,7)
SR
EUL (6,7)
ET "Hello 1 "
TBC (2,0)
EOT

Test79
>hello
SR
SR
SD
SD
SD
SD
ET "Hello's "
EUL (5,7)
MC -1
EUL (0,7)
EOT

Test80
>hello
SR
>world
SR
ET "Hello world "
EUL (6,11)
MC 2
EUL (0,5)
SL
SL
ET "llo world "
EC 0
EUL (0,3)
SL
ET "llo world "
EUL (0,0)
EOT

Test81
>hello
SR(0)
ET "Hello "
EOT

Test82
>hello
SR
SL(0)
EOT

Test83
>hello
SR
>world
SR
ET "Hello world "
SD
MC(0) 2
MC(1) 8
EOT

Test84
>blahblahblah
SR(1)
SU(0)
EOT

Test85
SR(1)
SU(0)
EOT

Test86
ST "This is Fleksy, a revolutionary keyboard technology "
MC(0) 2
SD(1)
SU
MC(0) 25
SD(1)
SU(0)
ET "This is Fleksy, a revolutionary keyboard technology "
MC 50
SD
SD
MC(0) 2
MC(2) 50
EOT

Test87
>blahblahblah
SR(1)
MC 5
BF(0)
SR(0)
EOT

Test88
>blahblahblah
SR(1)
NL(0)
EOT

Test89
>O
KB2
>'
KB1
>neal
EUL (0,6)
SR
SU
ET "O'neal "
TBC (1,0)
EOT

Test90
>blahblahblah
AC (off)
SR
ET "Blahblahblah "
AC (on)
SD(1)
EOT

Test91
AC (off)
>h
EUL (1,1)
>ello
ET "Hello"
EUL (5,5)
SR(0)
EUL (5,5)
EOT

Test92
CAPS (on)
>hello
SR
ET "HELLO "
CAPS (off)
>california
SR
ET "HELLO California "
EOT

Test94
AC (off)
>hello
SR
ET "Hello "
SL
SL
SL
ET "Hel"
EUL (3,3)
TBC (0,3)
EOT

Test95
>california
KB2
>.
ET "California."
TBC (2,0)
EUL (0,10)
EOT

Test96
KB2
>123
SR
ET "123 "
TBC (1,0)
EOT

Test97
KB2
>''
SR
EOT

Test98
AC (off)
//this will turn off auto shift
SH
>h
ET "h"
EOT

Test99
>hello
SR
>bl
SR
MC -1
SL
SL
TBC (1,0)
EUL (0,5)
EOT

Test100
>hello
SR
>bl
SL
SL
TBC (1,0)
EUL (0,5)
EOT

Test101
>hello
SR
SEL (0,5)
EOT

Test102
>hello
SR
>and
SR
>welcome
SR
SEL (6,10)
>blah
SR
ET "Hello blah welcome "
EOT

Test103
>hello
SR
>brains
SR
//Hello brains
SEL (2,10)
BF
ET "Hens "
EOT

Test104
>hello
SR
>brains
SR
//Hello brains
SEL (2,10)
SL
ET "Hens "
EOT

Test105
>hello
SR
>and
SR
>welcome
SR
SEL (2,10)
SU
SD
SU
SD
SD
SU
ET "Hello and welcome "
EOT

Test106
>hello
SR
SEL (0,6)
>california
SR
ET "California "
EOT

Test107
>hekko
SR
MC -1
TBC (0,5)
KB2
ET "Hello "
>1
TBC (0,6)
ET "Hello1 "
SU
ET "Hello1 "
EUL (0,6)
EOT

Test108
KB2
>123
SR
ET "123 "
EUL (0,3)
KB1
>hello
SR
SL
EUL (0,3)
SL
EUL (0,0)
EOT

Test109
KB2
>123
SR
BF
EUL (0,3)
BF
EUL (0,2)
EOT

Test110
KB2
>123
SR
SL
BF
KB1
>hello
SR
ET "Hello "
EUL (0,5)
EOT

Test111
>hekko
KB2
>1
SU
ET "Hekko1"
EUL (0,6)
MC 2
SD(1)
SR
TBC (1,0)
EOT

Test112
KB2
>123
MC 2
EUL (0,3)
EOT

Test113
KB2
>123
MC 2
KB1
>he
SL
SL
EUL (0,3)
EOT

Test114
KB2
>123
MC 2
KB1
>he
BF
BF
EUL (0,3)
EOT

Test115
KB2
>123
MC 2
KB1
>hello
//12hello3
SR
ET "12hello3 "
MC 2
EUL (0,8)
EOT

Test116
KB2
>123
SR
MC -1
MC +1
EUL (0,3)
EOT

Test117
>hello
SR
>there
SR
ET "Hello there "
BF
BF
BF
BF
BF
BF
ET "Hello "
EUL (0,5)
EC 6
EOT

Test118
>hello
SR
>there
SR
ET "Hello there "
MC -1
BF
BF
BF
BF
BF
ET "Hello "
EUL (0,5)
EC 6
EOT

Test119
>Hello
SR
SH
>vadim
SR
SU
SU
SL
>vadim
SR
ET "Hello Vadim "
EOT

Test120
>hello
KB2
>.
KB1
>test
SR
ET "Hello.test "
MC -3
SR(0)
EOT

Test121
>swuprd
SR
ET "Swiped "
BF
BF
>s
ET "Swipes"
SR
ET "Swipes "
EOT

Test122
>hello
SR
SR
>there
SR
MC 6
KB2
>5
ET "Hello.5 There "
BF
ET "Hello.There "
EOT

Test123
>hello
SR
SR
>there
SR
MC 6
KB2
>)
ET "Hello.) There "
SD
ET "Hello,) There "
EOT

Test124
>hello
SR
SR
>there
SR
MC 6
KB3
>[
ET "Hello.[ There "
SD
ET "Hello,[ There "
EOT

Test125
>hello
BF
>i
SR
ET "Hello "
EOT

Test126
>hekki
SR
ET "Hello "
MC -3
KB2
>.
SR
ET "Hel.lo "
SD
ET "Hello "
SU
ET "Hel.lo "
EOT
